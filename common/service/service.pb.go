// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecordRequest struct {
	Header               *RecordRequest_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Sample               []float32             `protobuf:"fixed32,2,rep,packed,name=sample,proto3" json:"sample,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RecordRequest) Reset()         { *m = RecordRequest{} }
func (m *RecordRequest) String() string { return proto.CompactTextString(m) }
func (*RecordRequest) ProtoMessage()    {}
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *RecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordRequest.Unmarshal(m, b)
}
func (m *RecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordRequest.Marshal(b, m, deterministic)
}
func (m *RecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordRequest.Merge(m, src)
}
func (m *RecordRequest) XXX_Size() int {
	return xxx_messageInfo_RecordRequest.Size(m)
}
func (m *RecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecordRequest proto.InternalMessageInfo

func (m *RecordRequest) GetHeader() *RecordRequest_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RecordRequest) GetSample() []float32 {
	if m != nil {
		return m.Sample
	}
	return nil
}

// Header needs to be sent only with the first request. If sent in subsequent
// requests it should match what was initially sent.
type RecordRequest_Header struct {
	NumChannels          int32    `protobuf:"varint,1,opt,name=num_channels,json=numChannels,proto3" json:"num_channels,omitempty"`
	SampleRate           float32  `protobuf:"fixed32,2,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordRequest_Header) Reset()         { *m = RecordRequest_Header{} }
func (m *RecordRequest_Header) String() string { return proto.CompactTextString(m) }
func (*RecordRequest_Header) ProtoMessage()    {}
func (*RecordRequest_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 0}
}

func (m *RecordRequest_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordRequest_Header.Unmarshal(m, b)
}
func (m *RecordRequest_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordRequest_Header.Marshal(b, m, deterministic)
}
func (m *RecordRequest_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordRequest_Header.Merge(m, src)
}
func (m *RecordRequest_Header) XXX_Size() int {
	return xxx_messageInfo_RecordRequest_Header.Size(m)
}
func (m *RecordRequest_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordRequest_Header.DiscardUnknown(m)
}

var xxx_messageInfo_RecordRequest_Header proto.InternalMessageInfo

func (m *RecordRequest_Header) GetNumChannels() int32 {
	if m != nil {
		return m.NumChannels
	}
	return 0
}

func (m *RecordRequest_Header) GetSampleRate() float32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

type RecordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordResponse) Reset()         { *m = RecordResponse{} }
func (m *RecordResponse) String() string { return proto.CompactTextString(m) }
func (*RecordResponse) ProtoMessage()    {}
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *RecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordResponse.Unmarshal(m, b)
}
func (m *RecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordResponse.Marshal(b, m, deterministic)
}
func (m *RecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordResponse.Merge(m, src)
}
func (m *RecordResponse) XXX_Size() int {
	return xxx_messageInfo_RecordResponse.Size(m)
}
func (m *RecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RecordRequest)(nil), "RecordRequest")
	proto.RegisterType((*RecordRequest_Header)(nil), "RecordRequest.Header")
	proto.RegisterType((*RecordResponse)(nil), "RecordResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xbf, 0x4e, 0x85, 0x30,
	0x14, 0xc6, 0x6d, 0x8d, 0x8d, 0x39, 0x08, 0x92, 0x26, 0x26, 0x84, 0x45, 0x64, 0xea, 0x62, 0x35,
	0x38, 0xba, 0xe9, 0xe2, 0xe0, 0xd4, 0x17, 0x20, 0x15, 0x4e, 0x82, 0x09, 0xb4, 0xdc, 0xb6, 0xdc,
	0x67, 0xba, 0x8f, 0x79, 0x73, 0x29, 0x77, 0x60, 0x3b, 0xf9, 0x7d, 0x7f, 0xf2, 0xe5, 0x40, 0xea,
	0xd1, 0x1d, 0xff, 0x3b, 0x94, 0xb3, 0xb3, 0xc1, 0xd6, 0x27, 0x02, 0xa9, 0xc2, 0xce, 0xba, 0x5e,
	0xe1, 0x61, 0x41, 0x1f, 0xf8, 0x2b, 0xb0, 0x01, 0x75, 0x8f, 0xae, 0x20, 0x15, 0x11, 0x49, 0xf3,
	0x24, 0x77, 0xba, 0xfc, 0x59, 0x45, 0xb5, 0x99, 0x78, 0x09, 0xcc, 0xeb, 0x69, 0x1e, 0xb1, 0xa0,
	0xd5, 0xad, 0xa0, 0x5f, 0x34, 0x27, 0x6a, 0x23, 0xe5, 0x2f, 0xb0, 0xe8, 0xe6, 0x2f, 0xf0, 0x60,
	0x96, 0xa9, 0xed, 0x06, 0x6d, 0x0c, 0x8e, 0x7e, 0xad, 0xbe, 0x53, 0x89, 0x59, 0xa6, 0xef, 0x0d,
	0xf1, 0x67, 0x48, 0x62, 0xac, 0x75, 0x3a, 0x5c, 0xda, 0x88, 0xa0, 0x0a, 0x22, 0x52, 0x3a, 0x60,
	0x9d, 0x43, 0x76, 0x5d, 0xe2, 0x67, 0x6b, 0x3c, 0x36, 0x9f, 0x70, 0x1f, 0x09, 0x3a, 0xfe, 0x06,
	0x2c, 0xde, 0x3c, 0xdb, 0x0f, 0x2e, 0x1f, 0xe5, 0x3e, 0x56, 0xdf, 0x08, 0xf2, 0x4e, 0xfe, 0xd8,
	0xfa, 0x80, 0x8f, 0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0x0e, 0xd3, 0x22, 0x11, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecorderClient is the client API for Recorder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecorderClient interface {
	Record(ctx context.Context, opts ...grpc.CallOption) (Recorder_RecordClient, error)
}

type recorderClient struct {
	cc *grpc.ClientConn
}

func NewRecorderClient(cc *grpc.ClientConn) RecorderClient {
	return &recorderClient{cc}
}

func (c *recorderClient) Record(ctx context.Context, opts ...grpc.CallOption) (Recorder_RecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Recorder_serviceDesc.Streams[0], "/Recorder/Record", opts...)
	if err != nil {
		return nil, err
	}
	x := &recorderRecordClient{stream}
	return x, nil
}

type Recorder_RecordClient interface {
	Send(*RecordRequest) error
	Recv() (*RecordResponse, error)
	grpc.ClientStream
}

type recorderRecordClient struct {
	grpc.ClientStream
}

func (x *recorderRecordClient) Send(m *RecordRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *recorderRecordClient) Recv() (*RecordResponse, error) {
	m := new(RecordResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RecorderServer is the server API for Recorder service.
type RecorderServer interface {
	Record(Recorder_RecordServer) error
}

// UnimplementedRecorderServer can be embedded to have forward compatible implementations.
type UnimplementedRecorderServer struct {
}

func (*UnimplementedRecorderServer) Record(srv Recorder_RecordServer) error {
	return status.Errorf(codes.Unimplemented, "method Record not implemented")
}

func RegisterRecorderServer(s *grpc.Server, srv RecorderServer) {
	s.RegisterService(&_Recorder_serviceDesc, srv)
}

func _Recorder_Record_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RecorderServer).Record(&recorderRecordServer{stream})
}

type Recorder_RecordServer interface {
	Send(*RecordResponse) error
	Recv() (*RecordRequest, error)
	grpc.ServerStream
}

type recorderRecordServer struct {
	grpc.ServerStream
}

func (x *recorderRecordServer) Send(m *RecordResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *recorderRecordServer) Recv() (*RecordRequest, error) {
	m := new(RecordRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Recorder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Recorder",
	HandlerType: (*RecorderServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Record",
			Handler:       _Recorder_Record_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}
